- name: Create the Prometheus application directory
  ansible.builtin.file:
    path: "{{ docker_dir }}/prometheus/data"
    state: directory
    mode: "0755"

- name: Copy Prometheus configuration file
  ansible.builtin.copy:
    src: prometheus/prometheus.yml
    dest: "{{ docker_dir }}/prometheus/data/prometheus.yml"
    mode: "0644"

- name: Create the Prometheus volumes
  community.docker.docker_volume:
    name: prometheus-data
    state: present
    driver: local

- name: Create cAdvisor (Prometheus exporter) container managed by Docker
  community.docker.docker_container:
    name: cadvisor
    image: gcr.io/cadvisor/cadvisor:latest
    state: started
    restart_policy: unless-stopped
    volumes:
      - "/:/rootfs:ro"
      - "/var/run:/var/run:rw"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro"
    networks:
      - name: monitoring

- name: Create Node exporter (Prometheus exporter) container managed by Docker
  community.docker.docker_container:
    name: node-exporter
    image: prom/node-exporter:latest
    state: started
    restart_policy: unless-stopped
    command:
      - "--path.procfs=/host/proc"
      - "--path.rootfs=/rootfs"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    volumes:
      - "/:/rootfs:ro"
      - "/sys:/host/sys:ro"
      - "/proc:/host/proc:ro"
    networks:
      - name: monitoring

- name: Create Prometheus container managed by Docker
  community.docker.docker_container:
    name: prometheus
    image: prom/prometheus:latest
    state: started
    restart_policy: unless-stopped
    command: --config.file=/etc/prometheus/prometheus.yml
    volumes:
      - "{{ docker_dir }}/prometheus/data:/etc/prometheus"
      - "prometheus-data:/prometheus"
    networks:
      - name: homelab
      - name: monitoring
    labels:
      traefik.enable: "true"
      traefik.http.routers.prometheus-secure.middlewares: "authentik@file"
      traefik.http.routers.prometheus-secure.entrypoints: "https"
      traefik.http.routers.prometheus-secure.rule: "Host(`prometheus.{{ domain }}`)"
      traefik.http.routers.prometheus-secure.tls: "true"
      traefik.http.routers.prometheus-secure.service: "prometheus-svc"
      traefik.http.services.prometheus-svc.loadBalancer.server.port: "9090"
      traefik.http.routers.prometheus-secure.tls.certresolver: letsencrypt
      traefik.http.routers.prometheus-secure.tls.domains[0].main: "{{ domain }}"
      traefik.http.routers.prometheus-secure.tls.domains[0].sans: "*.{{ domain }}"
      traefik.docker.network: homelab
